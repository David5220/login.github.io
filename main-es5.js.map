{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/add-client/add-client.component.ts","webpack:///src/app/components/add-client/add-client.component.html","webpack:///src/app/components/client-details/client-details.component.ts","webpack:///src/app/components/client-details/client-details.component.html","webpack:///src/app/components/clients/clients.component.ts","webpack:///src/app/components/clients/clients.component.html","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/edit-client/edit-client.component.ts","webpack:///src/app/components/edit-client/edit-client.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/not-found/not-found.component.ts","webpack:///src/app/components/not-found/not-found.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/components/settings/settings.component.ts","webpack:///src/app/components/settings/settings.component.html","webpack:///src/app/components/sidebar/sidebar.component.ts","webpack:///src/app/components/sidebar/sidebar.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/guards/register.guard.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/client.service.ts","webpack:///src/app/services/settings.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","providers","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebase","declarations","bootstrap","AddClientComponent","flashMessages","router","clientService","settingsService","client","firstName","lastName","email","phone","balance","disableBalanceOnAdd","getSettings","value","valid","show","cssClass","timeout","newClient","navigate","onSubmit","ClientDetailsComponent","route","flashMessagesService","hasBalance","showBalanceUpdateIput","snapshot","params","getClient","subscribe","updateClient","confirm","deleteClient","onDeleteClick","ClientsComponent","getClients","clients","getTotalOwed","totalOwed","reduce","total","parseFloat","toString","DashboardComponent","EditClientComponent","disableBalanceOnEdit","LoginComponent","authService","falshMessagesService","getAuth","auth","login","password","res","err","message","NavbarComponent","isLoggedIn","loggedInUser","showRegister","allowRegistration","logout","NotFoundComponent","RegisterComponent","register","SettingsComponent","flashMessage","settings","changeSettings","SidebarComponent","AuthGuard","afAuth","authState","pipe","RegisterGuard","AuthService","reject","signInWithEmailAndPassword","userData","createUserWithEmailAndPassword","signOut","providedIn","ClientService","afs","clientsCollection","collection","ref","orderBy","snapshotChanges","changes","map","action","data","payload","doc","add","clientDoc","exists","update","SettingsService","localStorage","getItem","JSON","parse","setItem","stringify","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { AddClientComponent } from './components/add-client/add-client.component';\nimport { EditClientComponent } from './components/edit-client/edit-client.component';\nimport { ClientDetailsComponent } from './components/client-details/client-details.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { RegisterGuard } from './guards/register.guard';\n\nconst routes: Routes = [\n  {path: '', component: DashboardComponent, canActivate:[AuthGuard]},\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: RegisterComponent,canActivate:[RegisterGuard]},\n  {path: 'client/add', component: AddClientComponent, canActivate:[AuthGuard]},\n  {path: 'client/edit/:id',component: EditClientComponent, canActivate:[AuthGuard]},\n  {path: 'client/:id', component: ClientDetailsComponent, canActivate:[AuthGuard]},\n  {path: 'settings', component: SettingsComponent, canActivate:[AuthGuard]},\n  {path: '**', component: NotFoundComponent}\n];\n\n@NgModule({\n  exports:[RouterModule],\n  imports: [RouterModule.forRoot(routes)],\n  providers:[AuthGuard,RegisterGuard]\n\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'clientpanel';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <flash-messages></flash-messages>\n  <router-outlet></router-outlet>\n  \n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { AddClientComponent } from './components/add-client/add-client.component';\nimport { EditClientComponent } from './components/edit-client/edit-client.component';\nimport { ClientDetailsComponent } from './components/client-details/client-details.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { environment } from '../environments/environment';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { ClientsComponent } from './components/clients/clients.component';\n\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { ClientService } from './services/client.service';\nimport { AuthService } from './services/auth.service';\nimport { SettingsService } from './services/settings.service';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    DashboardComponent,\n    SidebarComponent,\n    AddClientComponent,\n    EditClientComponent,\n    ClientDetailsComponent,\n    LoginComponent,\n    RegisterComponent,\n    SettingsComponent,\n    NotFoundComponent,\n    ClientsComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebase,'clientpanel'),\n    AngularFirestoreModule,\n    AngularFireAuthModule,\n    FlashMessagesModule.forRoot()\n    \n  ],\n  providers: [ClientService,AuthService,SettingsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild} from '@angular/core';\nimport { Client } from 'src/app/models/client';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\nimport { ClientService } from 'src/app/services/client.service';\nimport { SettingsService } from 'src/app/services/settings.service';\n\n@Component({\n  selector: 'app-add-client',\n  templateUrl: './add-client.component.html',\n  styleUrls: ['./add-client.component.css']\n})\nexport class AddClientComponent implements OnInit {\n  client: Client = {\n    firstName: '',\n    lastName: '',\n    email:'',\n    phone:'',\n    balance: 0\n  };\n  disableBalanceOnAdd: boolean;\n  @ViewChild('clientForm')form: any;\n  constructor(\n    private flashMessages: FlashMessagesService,\n    private router: Router,\n    private clientService: ClientService,\n    private settingsService:SettingsService\n  ){ }\n\n  ngOnInit(): void {\n    this.disableBalanceOnAdd = this.settingsService.getSettings().disableBalanceOnAdd;\n  }\n\n  onSubmit({value,valid}:{value:Client, valid:boolean}){\n    if(this.disableBalanceOnAdd){\n      value.balance = 0;\n    }\n\n    if(!valid){\n      this.flashMessages.show('Please fill out the forms correctly',{\n        cssClass: 'alert-danger',timeout:4000\n      });\n    }else{\n      this.clientService.newClient(value);\n      this.flashMessages.show('New messages added',{\n        cssClass: 'alert-success',timeout:4000\n      });\n\n      this.router.navigate(['/']);\n    }\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-6\">\n        <a routerLink = \"/\" class=\"btn btn-link\">\n            <i class=\"fa fa-arrow-circle-o-left\">Back to dashboard</i>\n        </a>\n    </div>\n    <div class=\"col-md-6\"></div>\n</div>\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        Add Client\n    </div>\n    <div class=\"card-body\">\n        <form #clientForm=\"ngForm\" (ngSubmit)=\"onSubmit(clientForm)\" >\n            <div class=\"form-group\">\n                <label for=\"firstName\">First Name:</label>\n                <input \n                type=\"text\"\n                class=\"form-control\"\n                name = \"firstName\"\n                [(ngModel)]=\"client.firstName\"\n                #clientFirstName = \"ngModel\"\n                [ngClass]=\"{'is-invalid': clientFirstName.errors && clientFirstName.touched}\"\n                required\n                minlength=\"2\"\n                >\n                <div class=\"invalid-feedback\" [hidden]=\"!clientFirstName.errors?.required\">\n                    First name required\n                </div>\n                <div class=\"invalid-feedback\" [hidden]=\"!clientFirstName.errors?.minlength\">\n                    Must be at least 2 characters\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"lastName\">Last Name:</label>\n                <input \n                type=\"text\"\n                class=\"form-control\"\n                name = \"lastName\"\n                [(ngModel)]=\"client.lastName\"\n                #clientLastName = \"ngModel\"\n                [ngClass]=\"{'is-invalid': clientLastName.errors && clientLastName.touched}\"\n                required\n                minlength=\"2\"\n                >\n                <div class=\"invalid-feedback\" [hidden]=\"!clientLastName.errors?.required\">\n                    Last name required\n                </div>\n                <div class=\"invalid-feedback\" [hidden]=\"!clientLastName.errors?.minlength\">\n                    Must be at least 2 characters\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"email\">Email:</label>\n                <input \n                type=\"text\"\n                class=\"form-control\"\n                name = \"email\"\n                [(ngModel)]=\"client.email\"\n                #clientEmail = \"ngModel\"\n                [ngClass]=\"{'is-invalid': clientEmail.errors && clientEmail.touched}\"\n                pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$\"\n                required\n                >\n                <div class=\"invalid-feedback\" [hidden]=\"!clientEmail.errors?.required\">\n                    Email required\n                </div>\n                <div class=\"invalid-feedback\" [hidden]=\"!clientEmail.errors?.pattern\">\n                    Email is invalid\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"phone\">Phone:</label>\n                <input \n                type=\"text\"\n                class=\"form-control\"\n                name = \"phone\"\n                [(ngModel)]=\"client.phone\"\n                #clientPhone = \"ngModel\"\n                [ngClass]=\"{'is-invalid': clientPhone.errors && clientPhone.touched}\"\n                required\n                minlength=\"10\"\n                >\n                <div class=\"invalid-feedback\" [hidden]=\"!clientPhone.errors?.required\">\n                    phone number required\n                </div>\n                <div class=\"invalid-feedback\" [hidden]=\"!clientPhone.errors?.minlength\">\n                    Must be at least 10 characters\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"balance\">Balance:</label>\n                <input \n                type=\"number\"\n                class=\"form-control\"\n                name = \"balance\"\n                [(ngModel)]=\"client.balance\"\n                #clientBalance = \"ngModel\"\n                [disabled] = \"disableBalanceOnAdd\"\n                >\n            </div>\n\n            <input type=\"submit\" value=\"Submit\" class=\"btn btn-primary btn-block\">\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ClientService } from 'src/app/services/client.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Client } from 'src/app/models/client';\n\n@Component({\n  selector: 'app-client-details',\n  templateUrl: './client-details.component.html',\n  styleUrls: ['./client-details.component.css']\n})\nexport class ClientDetailsComponent implements OnInit {\n  client: Client;\n  id: string;\n  hasBalance:boolean = false;\n  showBalanceUpdateIput:boolean = false;\n  constructor(\n    private clientService: ClientService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private flashMessagesService: FlashMessagesService\n    \n  ) { }\n\n  ngOnInit() {\n    //get id from url\n    this.id = this.route.snapshot.params['id'];\n    this.clientService.getClient(this.id).subscribe(client =>{\n      if(client != null){\n        if(client.balance>0){\n          this.hasBalance = true;\n        }\n      }\n      this.client = client;\n    });\n  }\n\n  updateBalance(){\n    this.clientService.updateClient(this.client);\n    this.flashMessagesService.show('Balance updated', {\n      cssClass: 'alert-success', timeout:4000\n    });\n  }\n\n  onDeleteClick(){\n    if(confirm('Are you sure to remove?')){\n        this.clientService.deleteClient(this.client);\n        this.flashMessagesService.show('Client removed', {\n        cssClass: 'alert-success', timeout:4000\n      });\n\n      this.router.navigate(['/']);\n    }\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-6\">\n        <a routerLink=\"/\" class=\"btn btn-link\">\n            <i class=\"fa fa-arrow-circle-o-left\">Back to Dashboard</i>\n        </a>\n    </div>\n    <div class=\"col-md-6\">\n        <div class=\"btn-group pull-right\">\n            <a routerLink=\"/client/edit/{{id}}\" class=\"btn btn-dark\" >Edit</a>\n            <button (click)=\"onDeleteClick()\" class=\"btn btn-danger\">Delete</button>\n        </div>\n    </div>\n</div>\n<hr>\n<div class=\"card\" *ngIf=\"client\">\n    <div class=\"card-header\">{{client.firstName}} {{client.lastName}}</div>\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"cold-md-8 col-sm-6\">\n                <h4>Client ID: {{client.id}}</h4>\n            </div>\n            <div class=\"cold-md-8 col-sm-6\">\n                <h3 class=\"pull-right\">\n                    Balance\n                    <span \n                        [class.text-success]=\"hasBalance\"\n                        [class.text-danger]=\"!hasBalance\"\n                        >{{client.balance | currency:'USD':'symbol'}}\n                    </span>\n                    <small>\n                        <a (click)=\"showBalanceUpdateIput = !showBalanceUpdateIput\">\n                            <i class=\"fa fa-pencil\"></i>\n                        </a>\n                    </small>\n                </h3>\n                \n                <div class=\"clearfix\">\n                    <form *ngIf=\"showBalanceUpdateIput\" (submit)=\"updateBalance()\">\n                        <div class=\"input-group\">\n                            <input type=\"text\" name=\"balance\" class=\"form-control\" [(ngModel)]=\"client.balance\">\n                            <span class=\"input-group-btn\">\n                                <button type=\"submit\" class=\"btn btn-primary\" >Update</button>\n                            </span>\n                        </div>\n                    </form>\n                </div>\n           </div>\n        </div>\n        <hr>\n        <ul class=\"list-group\">\n            <li class=\"list-group-item\">Email: {{client.email}}</li>\n            <li class=\"list-group-item\">phone: {{client.phone}}</li>\n        </ul>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Client } from 'src/app/models/client';\r\nimport { ClientService } from 'src/app/services/client.service';\r\n\r\n@Component({\r\n  selector: 'app-clients',\r\n  templateUrl: './clients.component.html',\r\n  styleUrls: ['./clients.component.css']\r\n})\r\nexport class ClientsComponent implements OnInit {\r\n  clients: Client[];\r\n  totalOwed: number;\r\n\r\n  constructor(private clientService: ClientService) { }\r\n\r\n  ngOnInit() {\r\n      this.clientService.getClients().subscribe(clients =>{\r\n        this.clients = clients\r\n        this.getTotalOwed();\r\n      });\r\n     \r\n  }\r\n\r\n  getTotalOwed(){\r\n    return this.totalOwed = this.clients.reduce((total,client) =>{\r\n      return total+ parseFloat(client.balance.toString());\r\n    },0);\r\n   \r\n  }\r\n\r\n}\r\n","<div class=\"row\">\n    <div class=\"col-md-6\">\n        <h2><i class=\"fa fas-users\"></i> Clients</h2>\n    </div>\n    <div class=\"col-md-6\">\n        <h5 class=\"text-right text-secondary\">Total owed: {{totalOwed | currency:'USD':'symbol'}}</h5>\n    </div>\n</div>\n\n<table *ngIf=\"clients?.length > 0; else noClients\" class=\"table table-striped\">\n    <thead class=\"thead-inverse\">\n        <tr>\n            <th>Name</th>\n            <th>Email</th>\n            <th>Balance</th>\n            <th></th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let client of clients\">\n            <td>{{client.firstName}} {{client.lastName}}</td>\n            <td>{{client.email}}</td>\n            <td>{{client.balance | currency:'USD':'symbol'}}</td>\n            <td>\n                <a routerLink = \"client/{{ client.id }}\" class=\"btn btn-secondary btn-sm\"> \n                <i class=\"fa fa-arrow-circle-o-right\"></i> Details \n                </a>\n            </td>\n        </tr>\n    </tbody>\n</table>\n<ng-template #noClients>\n    <h5>There are no clients in the system</h5>\n</ng-template>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-10\">\n        <app-clients></app-clients>\n    </div>\n    <div class=\"col-md-2\">\n        <app-sidebar></app-sidebar>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ClientService } from 'src/app/services/client.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Client } from 'src/app/models/client';\nimport { SettingsService } from 'src/app/services/settings.service';\n@Component({\n  selector: 'app-edit-client',\n  templateUrl: './edit-client.component.html',\n  styleUrls: ['./edit-client.component.css']\n})\nexport class EditClientComponent implements OnInit {\n  id:string;\n  disableBalanceOnEdit:boolean;\n  client: Client ={\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    balance: 0\n  }\n  constructor(\n    private clientService: ClientService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private flashMessagesService: FlashMessagesService,\n    private settingsService: SettingsService\n  ) { }\n\n  ngOnInit() {\n    this.disableBalanceOnEdit = this.settingsService.getSettings().disableBalanceOnEdit;\n    //get id from url\n    this.id = this.route.snapshot.params['id'];\n    this.clientService.getClient(this.id).subscribe(client =>this.client = client);\n  }\n\n  onSubmit({value,valid}:{value:Client, valid:boolean}){\n    if(!valid){\n      this.flashMessagesService.show('please fill out the form correctly',{\n        cssClass:'alert-danger',timeout:4000\n      });\n    }else{\n      value.id = this.id;\n      this.clientService.updateClient(value);\n      this.flashMessagesService.show('Client updated',{\n        cssClass:'alert-success',timeout:4000\n      });\n      this.router.navigate(['client/'+this.id]);\n    }\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-6\">\n        <a routerLink = \"/client/{{id}}\" class=\"btn btn-link\">\n            <i class=\"fa fa-arrow-circle-o-left\">Back to Client</i>\n        </a>\n    </div>\n    <div class=\"col-md-6\"></div>\n</div>\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        Edit Client\n    </div>\n    <div class=\"card-body\">\n        <form #clientForm=\"ngForm\" (ngSubmit)=\"onSubmit(clientForm)\" >\n            <div class=\"form-group\">\n                <label for=\"firstName\">First Name:</label>\n                <input \n                type=\"text\"\n                class=\"form-control\"\n                name = \"firstName\"\n                [(ngModel)]=\"client.firstName\"\n                #clientFirstName = \"ngModel\"\n                [ngClass]=\"{'is-invalid': clientFirstName.errors && clientFirstName.touched}\"\n                required\n                minlength=\"2\"\n                >\n                <div class=\"invalid-feedback\" [hidden]=\"!clientFirstName.errors?.required\">\n                    First name required\n                </div>\n                <div class=\"invalid-feedback\" [hidden]=\"!clientFirstName.errors?.minlength\">\n                    Must be at least 2 characters\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"lastName\">Last Name:</label>\n                <input \n                type=\"text\"\n                class=\"form-control\"\n                name = \"lastName\"\n                [(ngModel)]=\"client.lastName\"\n                #clientLastName = \"ngModel\"\n                [ngClass]=\"{'is-invalid': clientLastName.errors && clientLastName.touched}\"\n                required\n                minlength=\"2\"\n                >\n                <div class=\"invalid-feedback\" [hidden]=\"!clientLastName.errors?.required\">\n                    Last name required\n                </div>\n                <div class=\"invalid-feedback\" [hidden]=\"!clientLastName.errors?.minlength\">\n                    Must be at least 2 characters\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"email\">Email:</label>\n                <input \n                type=\"text\"\n                class=\"form-control\"\n                name = \"email\"\n                [(ngModel)]=\"client.email\"\n                #clientEmail = \"ngModel\"\n                [ngClass]=\"{'is-invalid': clientEmail.errors && clientEmail.touched}\"\n                pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$\"\n                required\n                >\n                <div class=\"invalid-feedback\" [hidden]=\"!clientEmail.errors?.required\">\n                    Email required\n                </div>\n                <div class=\"invalid-feedback\" [hidden]=\"!clientEmail.errors?.pattern\">\n                    Email is invalid\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"phone\">Phone:</label>\n                <input \n                type=\"text\"\n                class=\"form-control\"\n                name = \"phone\"\n                [(ngModel)]=\"client.phone\"\n                #clientPhone = \"ngModel\"\n                [ngClass]=\"{'is-invalid': clientPhone.errors && clientPhone.touched}\"\n                required\n                minlength=\"10\"\n                >\n                <div class=\"invalid-feedback\" [hidden]=\"!clientPhone.errors?.required\">\n                    phone number required\n                </div>\n                <div class=\"invalid-feedback\" [hidden]=\"!clientPhone.errors?.minlength\">\n                    Must be at least 10 characters\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"balance\">Balance:</label>\n                <input \n                type=\"number\"\n                class=\"form-control\"\n                name = \"balance\"\n                [(ngModel)]=\"client.balance\"\n                #clientBalance = \"ngModel\"\n                [disabled]=\"disableBalanceOnEdit\"\n                >\n            </div>\n\n            <input type=\"submit\" value=\"Submit\" class=\"btn btn-primary btn-block\">\n        </form>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\nAuthService\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  email:string;\n  password:string;\n  constructor(\n    private authService:AuthService,\n    private falshMessagesService: FlashMessagesService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.authService.getAuth().subscribe(auth =>{\n      if(auth){\n        this.router.navigate(['/']);\n      }\n    })\n  }\n  onSubmit(){\n    this.authService.login(this.email,this.password)\n    .then(res=>{\n      this.falshMessagesService.show('You are loginged in',{cssClass:'alert-success',timeout:4000});\n      this.router.navigate(['/']);\n    })\n    .catch(err =>{\n      this.falshMessagesService.show(err.message,{cssClass:'alert-danger',timeout:4000});\n    });\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-6 mx-auto\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h1 class=\"text-center pb-4 pt-3\">\n                    <span class=\"text-primary\">\n                        <i class=\"fa fa-lock\"></i>Client Panel\n                    </span>Login\n                </h1>\n                <form (submit)=\"onSubmit()\" >\n                    <div class=\"form-group\">\n                        <label for=\"email\">Email</label>\n                        <input type=\"email\" name=\"email\" [(ngModel)]=\"email\" \n                        class=\"form-control\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"password\">Password</label>\n                        <input type=\"password\" name=\"password\" [(ngModel)]=\"password\" \n                        class=\"form-control\" required>\n                    </div>\n                    <input type=\"submit\" value=\"Login\" class=\"btn btn-primary btn-block\">\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { SettingsService } from 'src/app/services/settings.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  isLoggedIn: boolean;\n  showRegister:boolean;\n  loggedInUser: string;\n  constructor(\n    private authService: AuthService,\n    private router:Router,\n    private flashMessagesService:FlashMessagesService,\n    private settingsService: SettingsService\n  ) { }\n\n  ngOnInit(): void {\n    this.authService.getAuth().subscribe(auth =>{\n      if(auth){\n        this.isLoggedIn=true;\n        this.loggedInUser = auth.email;\n      }else{\n        this.isLoggedIn=false;\n      }\n    });\n    this.showRegister = this.settingsService.getSettings().allowRegistration;\n\n  }\n\n  onLogoutClick(){\n    this.authService.logout();\n    this.flashMessagesService.show('You are now logged out',{cssClass: 'alert-success',timeout:1000});\n    // this.router.navigate(['/login']);\n    this.isLoggedIn = false;\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-primary mb-4\">\n    <div class=\"container\">\n        <a routerLink=\"/\" class=\"navbar-brand\">ClientPanel</a>\n\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" \n        data-target=\"#navbarMain\"> \n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div class=\"collapse navbar-collapse\" id=\"navbarMain\">\n            <ul class=\"navbar-nav mr-auto\">\n                <li class=\"nav-item\">\n                    <a routerLink=\"/\" class=\"nav-link\">Dashboard</a>\n                </li>\n            </ul>\n\n            <ul class=\"navbar-nav ml-auto\">\n                <li *ngIf=\"!isLoggedIn && showRegister\" class=\"nav-item\">\n                    <a routerLink=\"/register\" class=\"nav-link\">Register</a>\n                </li>\n                <li *ngIf=\"!isLoggedIn && showRegister\" class=\"nav-item\">\n                    <a routerLink=\"/login\" class=\"nav-link\">Login</a>\n                </li>\n                <li *ngIf=\"isLoggedIn\" class=\"nav-item\">\n                    <a href=\"#\" class=\"nav-link\">{{ loggedInUser }}</a>\n                </li>\n                <li *ngIf=\"isLoggedIn\" class=\"nav-item\">\n                    <a routerLink=\"/settings\" class=\"nav-link\">Settings</a>\n                </li>\n                <li *ngIf=\"isLoggedIn\" class=\"nav-item\">\n                    <a routerLink=\"/login\" class=\"nav-link\" (click)=\"onLogoutClick()\">Logout</a>\n                </li>\n            </ul>\n        </div>\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-found works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  email: string;\n  password: string;\n  constructor(\n    private authService:AuthService,\n    private falshMessagesService: FlashMessagesService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(){\n    this.authService.register(this.email,this.password)\n    .then(res=>{\n      this.falshMessagesService.show('You are now registered and logged in',\n      {cssClass:'alert-success',timeout:4000});\n      this.router.navigate(['/']);\n    })\n    .catch(err=>{\n      this.falshMessagesService.show(err.message,{\n        cssClass:'alert-danger',timeout:4000\n      });\n    })\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-md-6 mx-auto\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h1 class=\"text-center pb-4 pt-3\">\n                    <span class=\"text-primary\">\n                        <i class=\"fa fa-lock\"></i>Client Panel\n                    </span>Regiter\n                </h1>\n                <form (submit)=\"onSubmit()\" >\n                    <div class=\"form-group\">\n                        <label for=\"email\">Email</label>\n                        <input type=\"email\" name=\"email\" [(ngModel)]=\"email\" \n                        class=\"form-control\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"password\">Password</label>\n                        <input type=\"password\" name=\"password\" [(ngModel)]=\"password\" \n                        class=\"form-control\" required>\n                    </div>\n                    <input type=\"submit\" value=\"Register\" class=\"btn btn-primary btn-block\">\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Settings } from 'src/app/models/settings';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { SettingsService } from 'src/app/services/settings.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n  settings: Settings;\n  constructor(\n   private router:Router,\n   private flashMessage: FlashMessagesService,\n   private settingsService: SettingsService\n  ) { }\n\n  ngOnInit(): void {\n    this.settings = this.settingsService.getSettings();\n  }\n  \n  onSubmit(){\n    this.settingsService.changeSettings(this.settings);\n    this.flashMessage.show('Settings saved',{\n      cssClass:'alert-success',timeout:2000\n    });\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-6\">\n        <a routerLink=\"/\" class=\"btn btn-link\">\n            <i class=\"fa fa-arrow-circle-o-left\"></i>Back to DashBoard\n        </a>\n    </div>\n    <div class=\"col-md-6\"></div>\n</div>\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        Edit Settings\n    </div>\n    <div class=\"card-body\">\n        <form (submit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                <label>Allow Registration</label>\n                <input type=\"checkbox\" name=\"allowRegistration\" \n                    [checked]= \"settings.allowRegistration\"\n                    (change)=\"settings.allowRegistration = !settings.allowRegistration\"\n                >\n            </div>\n            <div class=\"form-group\">\n                <label>Disable Balance On Add</label>\n                <input type=\"checkbox\" name=\"disableBalanceOnAdd\" \n                    [checked]= \"settings.disableBalanceOnAdd\"\n                    (change)=\"settings.disableBalanceOnAdd = !settings.disableBalanceOnAdd\"\n                >\n            </div>\n            <div class=\"form-group\">\n                <label>Disable Balance On Edit</label>\n                <input type=\"checkbox\" name=\"disableBalanceOnEdit\" \n                    [checked]= \"settings.disableBalanceOnEdit\"\n                    (change)=\"settings.disableBalanceOnEdit = !settings.disableBalanceOnEdit\"\n                >\n            </div>\n\n            <input type=\"submit\" value=\"Submit\" class=\"btn btn-primary btn-block\">\n        </form>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<a routerLink=\"/client/add\" class=\"btn btn-success btn-block\">\n    <i class=\"fa fa-plus\">New</i>\n</a>\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(\r\n      private router: Router,\r\n      private afAuth: AngularFireAuth\r\n  ){}\r\n\r\n  canActivate(): Observable<boolean>{\r\n      return this.afAuth.authState.pipe(map(auth =>{\r\n          if(!auth){\r\n              this.router.navigate(['/login']);\r\n              return false;\r\n          }else{\r\n              return true;\r\n          }\r\n      }));\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { SettingsService } from '../services/settings.service';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class RegisterGuard implements CanActivate {\r\n\r\n  constructor(\r\n      private router: Router,\r\n      private settingsService: SettingsService\r\n  ){}\r\n\r\n  canActivate(): boolean{\r\n      if(this.settingsService.getSettings().allowRegistration){\r\n        return true;\r\n      }else{\r\n          this.router.navigate(['/login']);\r\n          return false;\r\n      }\r\n  }\r\n}","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { Observable } from 'rxjs';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private afAuth: AngularFireAuth) { }\n\n  login(email:string,password:string){\n    return new Promise((resolve,reject) =>{\n      this.afAuth.auth.signInWithEmailAndPassword(email,password)\n      .then(userData => resolve(userData), err =>reject(err))\n    });\n  }\n  register(email:string,password:string){\n    return new Promise((resolve,reject) =>{\n      this.afAuth.auth.createUserWithEmailAndPassword(email,password)\n      .then(userData => resolve(userData), err =>reject(err))\n    });\n  }\n  getAuth(){\n    return this.afAuth.authState.pipe(auth => auth);\n  }\n  logout(){\n    this.afAuth.auth.signOut();\n  }\n \n}","import { Injectable } from '@angular/core';\nimport {\n  AngularFirestore, AngularFirestoreCollection,\n  AngularFirestoreDocument\n} from 'angularfire2/firestore';\nimport { Observable } from 'rxjs';\nimport { Client } from '../models/client';\n\nimport { map } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientService {\n\n  clientsCollection: AngularFirestoreCollection<Client>;\n  clientDoc: AngularFirestoreDocument<Client>;\n\n  clients: Observable<Client[]>;\n  client: Observable<Client>;\n  \n  constructor(private afs: AngularFirestore) {\n    this.clientsCollection = this.afs.collection('clients',\n      ref => ref.orderBy('lastName', 'asc'));\n  }\n\n  getClients(): Observable<Client[]>{\n\n    this.clients = this.clientsCollection.snapshotChanges().pipe(map(changes => {\n        // console.warn({ 'a': changes })\n        return changes.map(action => {\n          const data = action.payload.doc.data() as Client\n          data.id = action.payload.doc.id\n          return data\n        })\n      }\n    ))\n    return this.clients; \n  \n  }\n\n  newClient(client:Client){\n    this.clientsCollection.add(client);\n  }\n\n  getClient(id:string): Observable<Client>{\n    this.clientDoc = this.afs.doc(`clients/${id}`);\n    this.client = this.clientDoc.snapshotChanges().pipe(map(action =>{\n      if(action.payload.exists === false){\n        return null;\n      }else{\n        const data = action.payload.data() as Client;\n        data.id = action.payload.id;\n        return data;\n      }\n    }));\n    return this.client;\n  }\n\n  updateClient(client: Client){\n    this.clientDoc = this.afs.doc(`clients/${client.id}`);\n    this.clientDoc.update(client);\n  }\n  deleteClient(client: Client){\n    this.clientDoc = this.afs.doc(`clients/${client.id}`);\n    this.clientDoc.delete();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Settings } from '../models/settings';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService {\n  settings: Settings = {\n    allowRegistration: true,\n    disableBalanceOnAdd:true,\n    disableBalanceOnEdit:true\n  }\n  constructor() {\n    if(localStorage.getItem('settings') !=null){\n      this.settings = JSON.parse(localStorage.getItem('settings'));\n    }\n   }\n\n  getSettings():Settings{\n    return this.settings;\n  }\n\n  changeSettings(settings: Settings){\n    localStorage.setItem('settings',JSON.stringify(settings));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyCE6dQmiIJkDHa_cgAN3SsAryV_YPTlVhQ\",\n    authDomain: \"clientpanelprod-b787e.firebaseapp.com\",\n    databaseURL: \"https://clientpanelprod-b787e.firebaseio.com\",\n    projectId: \"clientpanelprod-b787e\",\n    storageBucket: \"clientpanelprod-b787e.appspot.com\",\n    messagingSenderId: \"616217208370\",\n    appId: \"1:616217208370:web:0378e2ee2f27ffa648be2b\",\n    measurementId: \"G-D1FQMEW0KQ\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}